---
import Image from '~/components/common/Image.astro';
import Button from '~/components/ui/Button.astro';
import Background from '~/components/ui/Background.astro';

import type { Hero as Props } from '~/types';

const {
  title = await Astro.slots.render('title'),
  subtitle = await Astro.slots.render('subtitle'),
  tagline,

  content = await Astro.slots.render('content'),
  actions = await Astro.slots.render('actions'),

  id,
} = Astro.props;
---

<section class="hero relative md:-mt-[24px] not-prose h-screen" {...id ? { id } : {}}>
  <div class="relative max-w-7xl mx-auto px-4 sm:px-6 z-10">
    <div class="pt-0 md:pt-[76px] pointer-events-none"></div>
    <div>
      <div class="text-center pb-10 md:pb-16 max-w-5xl mx-auto">
        {
          tagline && (
            <p
              class="text-base text-secondary dark:text-blue-200 font-bold tracking-wide uppercase"
              set:html={tagline}
            />
          )
        }
        {
          title && (
            <h1
              class="text-5xl md:text-6xl font-bold leading-tighter tracking-tighter mb-4 font-heading dark:text-gray-200"
              set:html={title}
            />
          )
        }
        <div class="max-w-3xl mx-auto">
          {subtitle && <p class="text-xl text-muted mb-6 dark:text-slate-300" set:html={subtitle} />}
          <!-- {
            actions && (
              <div class="max-w-xs sm:max-w-md m-auto flex flex-nowrap flex-col sm:flex-row sm:justify-center gap-4">
                {Array.isArray(actions) ? (
                  actions.map((action) => (
                    <div class="flex w-full sm:w-auto">
                      <Button {...(action || {})} class="w-full sm:mb-0" />
                    </div>
                  ))
                ) : (
                  <Fragment set:html={actions} />
                )}
              </div>
            )
          } -->
        </div>
        {content && <Fragment set:html={content} />}
      </div>
    </div>
  </div>
  <div class="images relative">
    <img src="/original.jpg" alt="original" class="original absolute inset-0 w-full h-full object-cover" />
    <img src="/segmented.png" alt="segmented" class="segmented absolute inset-0 w-full h-full object-cover" />
  </div>
</section>

<style>
  @keyframes fadeInAndOut {
    0% {
      opacity: 0;
    }
    50% {
      opacity: 1;
    }
    100% {
      opacity: 0;
    }
  }

  .hero {
    display: flex;
    flex-direction: column;
  }

  .images {
    flex-grow: 1;
  }

  img.segmented {
    animation: fadeInAndOut 10s ease-in-out infinite;
  }
</style>
